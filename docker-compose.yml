version: "3.8"
services:
  reverse-proxy:
    # 官方的 traefik v2 docker 镜像
    image: traefik:v2.2
    # 启用 web UI，并告诉Traefik侦听docker
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      # HTTP 端口映射
      - "80:80"
      # traefik Web UI 端口映射(enable by --api.insecure=true)
      - "8080:8080"
    volumes:
      # 以便Traekit能够监听Docker事件
      - /var/run/docker.sock:/var/run/docker.sock
  postgres-account:
    image: "postgres:alpine"
    environment:
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    #   Set a volume for data and initial sql script
    #   May configure initial db for future demo
    volumes:
      - "pgdata_account:/var/lib/postgresql/data"
    # - ./init:/docker-entrypoint-initdb.d/
    command: [ "postgres", "-c", "log_statement=all" ]
  account:
    build:
      context: ./account
      target: builder
    image: account
    env_file:
      - ./account/.env.dev
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.account.rule=Host(`malcorp.test`) && PathPrefix(`/api/account`)"
    environment:
      - ENV=dev
    volumes:
      - ./account:/go/src/app
    depends_on:
      - postgres-account
    # 必须使用$$(双美元符号)，这样docker就不会尝试替换变量
    command: reflex -r "\.go$$" -s -- sh -c "go run ./"
volumes:
  pgdata_account:


